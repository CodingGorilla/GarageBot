@page "/"
@using GarageBot.Web.Services
@inject ChatServices.GarageHubService HubService;
@inject Microsoft.JSInterop.IJSRuntime JSRuntime;


<h1>Hello, world!</h1>

Welcome to your new app.
<audio id="alertAudio" ref="alertAudio" src="/content/imperial-alert.mp3"></audio>
<audio id="celebrateAudio" ref="celebrateAudio" src="/content/celebration.mp3"></audio>
<br/><br/>
@AlertText

@code{

    ElementReference alertAudio;
    ElementReference celebrateAudio;

    public string AlertText = "No alert yet";

    public bool AlertSent = false;
    public bool CelebrateSent = false;

    protected override async Task OnInitializedAsync()
    {
        HubService.OnAlertReceived += AlertReceived;
        HubService.OnCelebrateReceived += CelebrateReceived;
        await HubService.Connect();
    }

    protected override void OnAfterRender()
    {
        try
        {
            InvokeAsync(() =>
            {
                if (AlertSent)
                {
                    JSRuntime.InvokeAsync<object>("audioLib.playAudio", "alertAudio");
                }
                else if (CelebrateSent)
                {
                    JSRuntime.InvokeAsync<object>("audioLib.playAudio", "celebrateAudio");
                }
            });

        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.ToString());
        }
        AlertSent = false;
        CelebrateSent = false;
    }

    private void AlertReceived(object sender, EventArgs args)
    {
        try
        {
            InvokeAsync(() =>
            {
                AlertSent = true;
                AlertText = $"Alert received {DateTime.Now}";
                JSRuntime.InvokeAsync<object>("audioLib.playAudio", alertAudio);
                this.StateHasChanged();
            });
        }
        catch (Exception error)
        {
            Console.WriteLine(error.ToString());
        }
    }

    private void CelebrateReceived(object sender, EventArgs args)
    {
        try
        {
            InvokeAsync(() =>
            {
                CelebrateSent = true;
                JSRuntime.InvokeAsync<object>("audioLib.playAudio", celebrateAudio);
                this.StateHasChanged();
            });
        }
        catch (Exception error)
        {
            Console.WriteLine(error.ToString());
        }
    }
}